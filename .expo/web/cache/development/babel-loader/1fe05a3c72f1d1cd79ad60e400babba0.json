{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { useState, useEffect } from \"react\";\nimport yelp from \"../api/yelp\";\nexport default (function () {\n  var _useState = useState({\n    data: null,\n    loading: false,\n    error: null\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      results = _useState2[0],\n      setResults = _useState2[1];\n\n  var searchRestaurants = function _callee(term) {\n    var response;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setResults({\n              data: null,\n              loading: true,\n              error: null\n            });\n            _context.prev = 1;\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(yelp.get(\"/search\", {\n              params: {\n                limit: 1,\n                term: term,\n                location: \"Toronto\"\n              }\n            }));\n\n          case 4:\n            response = _context.sent;\n            setResults({\n              data: response.data.businesses,\n              loading: false,\n              error: null\n            });\n            _context.next = 11;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](1);\n            setResults({\n              data: null,\n              loading: false,\n              error: \"Something went wrong\"\n            });\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[1, 8]], Promise);\n  };\n\n  return [results, searchRestaurants];\n});","map":{"version":3,"names":["useState","useEffect","yelp","data","loading","error","results","setResults","searchRestaurants","term","get","params","limit","location","response","businesses"],"sources":["C:/Users/Isabel/Documents/react-native-food-app/src/hooks/useRestaurants.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport yelp from \"../api/yelp\";\r\n\r\nexport default () => {\r\n\tconst [results, setResults] = useState({\r\n\t\tdata: null,\r\n\t\tloading: false,\r\n\t\terror: null\r\n\t});\r\n\r\n\tconst searchRestaurants = async term => {\r\n\t\tsetResults({\r\n\t\t\tdata: null,\r\n\t\t\tloading: true,\r\n\t\t\terror: null\r\n\t\t});\r\n\r\n\t\ttry {\r\n\t\t\tconst response = await yelp.get(\"/search\", {\r\n\t\t\t\tparams: {\r\n\t\t\t\t\tlimit: 1,\r\n\t\t\t\t\tterm,\r\n\t\t\t\t\tlocation: \"Toronto\"\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tsetResults({\r\n\t\t\t\tdata: response.data.businesses,\r\n\t\t\t\tloading: false,\r\n\t\t\t\terror: null\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tsetResults({\r\n\t\t\t\tdata: null,\r\n\t\t\t\tloading: false,\r\n\t\t\t\terror: \"Something went wrong\"\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t//\tconsole.log(response);\r\n\t};\r\n\treturn [results, searchRestaurants];\r\n};\r\n"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,IAAP;AAEA,gBAAe,YAAM;EACpB,gBAA8BF,QAAQ,CAAC;IACtCG,IAAI,EAAE,IADgC;IAEtCC,OAAO,EAAE,KAF6B;IAGtCC,KAAK,EAAE;EAH+B,CAAD,CAAtC;EAAA;EAAA,IAAOC,OAAP;EAAA,IAAgBC,UAAhB;;EAMA,IAAMC,iBAAiB,GAAG,iBAAMC,IAAN;IAAA;IAAA;MAAA;QAAA;UAAA;YACzBF,UAAU,CAAC;cACVJ,IAAI,EAAE,IADI;cAEVC,OAAO,EAAE,IAFC;cAGVC,KAAK,EAAE;YAHG,CAAD,CAAV;YADyB;YAAA;YAAA,iCAQDH,IAAI,CAACQ,GAAL,CAAS,SAAT,EAAoB;cAC1CC,MAAM,EAAE;gBACPC,KAAK,EAAE,CADA;gBAEPH,IAAI,EAAJA,IAFO;gBAGPI,QAAQ,EAAE;cAHH;YADkC,CAApB,CARC;;UAAA;YAQlBC,QARkB;YAexBP,UAAU,CAAC;cACVJ,IAAI,EAAEW,QAAQ,CAACX,IAAT,CAAcY,UADV;cAEVX,OAAO,EAAE,KAFC;cAGVC,KAAK,EAAE;YAHG,CAAD,CAAV;YAfwB;YAAA;;UAAA;YAAA;YAAA;YAqBxBE,UAAU,CAAC;cACVJ,IAAI,EAAE,IADI;cAEVC,OAAO,EAAE,KAFC;cAGVC,KAAK,EAAE;YAHG,CAAD,CAAV;;UArBwB;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAA1B;;EA8BA,OAAO,CAACC,OAAD,EAAUE,iBAAV,CAAP;AACA,CAtCD"},"metadata":{},"sourceType":"module"}